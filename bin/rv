#!/bin/bash

# Usage: 
#   rv <ruby_selector> [command]
#
# Run a command (defaulting to $SHELL) with the ruby and gem environment chosen
# by the given ruby_selector, which is simply passed to chruby-exec.  Set the
# $GEMENV environment variable if you want the gem environment to be put
# somewhere other than .rv/<ruby_selector>.

set -e
set -u

ruby=${1:-}
if [ ! -z "${ruby}" ]; then
  shift
fi

if [ -z "${ruby}" ]; then
  ruby=$(cd .rv && ls -d */ | sort | tail -n1 | tr -d '/')
fi

# This slightly odd pair of lines says: everything after the ruby
# specification is the command to run inside the chruby-exec subshell,
# defaulting to the user's $SHELL.
cmd=$*
: ${cmd:="${SHELL}"}

# In a similar fashion, we can override the default gem environment selector
# here:
: ${GEMENV:=$(ls -d .rv/*${ruby}* | tail -n1)}

if [ -z ${GEMENV} ]; then
  echo "rv: Cannot find a ruby called ${ruby}!" >&2
  exit 1
fi

chruby-exec ${ruby} -- ${GEMENV}/bin/exec ${cmd}
